type Query {
  users: [User!]!
  sessions: [Session]!
  userInfo: User!
  isLoggedIn: Boolean!
  linkToken: String!
  transactions(input: TransactionSearchInput!): TransactionConnection!
  items: [Item!]!
}

type Mutation {
  login(input: LoginInput!): Boolean!
  logout: Boolean!
  createUser(input: NewUserInput!): User!
  setAccessToken(input: PublicTokenInput!): Boolean!
  deleteItem(input: DeleteItemInput!): Boolean!
}

type TransactionConnection {
  nodes: [Transaction!]!
  pageInfo: PageInfo!
}

input TransactionSearchInput {
  # TODO: allow searching
  # query: String
  pageInfo: PageInfoInput
}

input LoginInput {
  username: String!
  password: String!
}

input NewUserInput {
  username: String!
  email: String!
  type: String!
}

input PublicTokenInput {
  publicToken: String!
}

input DeleteItemInput {
  id: ID!
}

enum UserType {
  ADMIN
  REGULAR
}

type User {
  id: ID!
  username: String!
  email: String!
  type: UserType!
  password: String!
  createdAt: ISOTimestamp!
}

type Session {
  id: ID!
  username: String!
  refreshToken: String!
  expiresAt: ISOTimestamp!
  createdAt: ISOTimestamp!
}

type Transaction {
  id: ID!
  itemID: String!
  userID: ID!
  transactionID: String!
  date: ISOTimestamp!
  amount: Float!
  category: String!
  name: String!
  createdAt: ISOTimestamp!
}

type Item {
  id: ID!
  userID: ID!
  institution: String!
  createdAt: ISOTimestamp!
  updatedAt: ISOTimestamp!
}

type PageInfo {
  limit: Int!
  page: Int!
  sort: String!
  totalRows: Int!
  totalPages: Int!
}

input PageInfoInput {
  page: Int!
}

# An ISOTimestamp is an RFC3339-formatted timestamp string.
scalar ISOTimestamp
